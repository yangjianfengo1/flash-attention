#include <iostream>
#include <cuda_runtime.h>
#include <cudnn.h>
#include <cublas_v2.h>
#include <vector>
#include <iostream>
#include "capi/flash_attn.h"
using std::vector;
using std::cout;

template <typename T>
__global__ void print_vector(const T * data, int len) {
    for (int i = 0; i < len; ++i) {
        printf("%f, ", float(data[i]));
    }
    printf("\n");
}

int main () {
    vector<__half> query = {
        -0.92480469, -0.42529297, -2.64453125,  0.14514160, -0.12084961,
          -0.57958984, -0.62304688, -0.32836914, -1.07421875, -0.36303711,
          -1.67089844,  2.26562500,  0.31176758, -0.18420410,  1.28710938,
           1.18164062, -0.12707520,  1.21679688,  1.43554688,  1.06054688,
          -0.49414062, -1.42480469, -0.72460938, -1.29687500,  0.06970215,
          -0.00740814,  1.89648438,  0.68798828, -0.07794189, -0.83740234,
           1.35058594, -0.28784180,
        -0.59667969, -0.32836914, -0.90869141, -0.80615234, -0.74072266,
          -0.05038452,  0.54345703,  1.51464844,  0.01412201,  0.45312500,
           1.63476562,  0.71240234, -0.18054199,  1.02539062, -1.46191406,
          -0.75537109, -0.18359375,  0.38232422,  0.39184570, -0.08300781,
           0.89697266, -1.11230469,  0.11163330,  0.48632812, -0.54980469,
          -0.32299805, -0.54687500,  0.90478516,  0.28369141,  0.12103271,
           0.47290039, -1.08203125,
        -0.03344727, -0.97363281,  0.95605469, -1.17968750, -1.00683594,
           0.11596680,  0.68505859, -0.41235352, -0.67382812, -0.54052734,
           0.68994141, -1.55175781,  0.38061523, -0.04357910,  0.35961914,
          -0.50439453, -0.31054688,  0.76416016, -3.12890625,  0.34936523,
          -0.02761841,  1.44433594, -0.00277138,  0.18994141,  0.22412109,
          -0.23278809,  0.97119141,  1.67773438,  0.13452148,  0.52441406,
           1.16992188, -0.95556641,
        -0.08569336, -1.49804688, -0.90722656, -0.45239258,  0.06616211,
          -0.03839111,  0.58398438,  0.88476562, -1.61523438,  0.44848633,
           0.73388672, -0.84570312,  0.65869141, -0.35546875, -1.91113281,
          -0.16845703,  1.89648438,  0.51318359,  1.10058594, -1.39062500,
          -0.26245117, -1.44335938,  1.54492188,  0.01218414,  2.14453125,
          -0.92626953,  1.69042969, -0.25512695, -0.90234375, -0.21276855,
          -0.33154297, -0.20227051,
        -1.14550781, -0.57128906, -0.65087891,  2.07812500, -1.40332031,
           1.28027344, -2.12304688, -0.90283203,  0.26684570, -0.77343750,
          -0.19543457, -0.35498047,  0.34008789, -0.14074707,  0.35131836,
          -0.98046875, -0.39282227,  0.56152344,  0.05078125,  1.58789062,
          -0.40405273, -0.22448730, -0.17565918,  0.15173340,  0.06134033,
          -1.39746094, -0.03402710, -0.24072266,  1.04687500,  1.28515625,
           0.75732422, -0.83154297,
        0.40112305, -0.48144531, -0.98535156,  0.93798828,  0.36743164,
          -0.46752930, -1.57324219,  1.03808594, -0.57324219,  0.27514648,
          -0.27539062,  0.15942383, -2.25585938,  0.53857422, -1.23144531,
           1.54394531,  0.10485840, -0.46264648,  0.46435547,  0.15002441,
          -1.38085938,  1.88476562, -1.10058594,  0.27612305, -0.68505859,
           0.65917969, -0.81787109, -0.09332275,  0.19177246,  0.21447754,
          -0.73681641, -0.45166016,
        -0.13549805, -1.31738281, -0.87402344, -0.40844727,  0.37060547,
           0.23022461, -1.34765625, -0.50048828, -0.41210938, -1.50585938,
          -1.12304688, -0.24951172, -0.69677734, -2.19531250, -0.44555664,
           0.05752563,  0.27099609,  1.22949219, -0.01477051,  0.39282227,
          -1.24902344,  1.60644531,  0.53125000, -1.32324219, -1.71777344,
           0.95117188, -0.22546387, -0.56933594,  0.29858398, -0.46655273,
           2.33007812,  0.55664062,
        0.90917969,  0.29199219, -2.28515625,  0.42138672,  1.11718750,
           0.59521484,  0.30834961,  1.26855469,  0.10296631, -1.98144531,
           0.58935547,  0.15490723,  0.80664062,  0.24877930, -0.68505859,
          -0.01183319, -2.37695312,  0.33203125,  0.33496094, -0.07604980,
           0.22583008, -2.45312500,  0.07391357, -1.96875000,  1.16113281,
          -0.53369141,  1.32324219, -1.70898438, -1.10839844,  1.34179688,
           3.31640625, -0.84667969,
        0.23742676,  1.08886719, -0.24975586, -0.49731445, -1.15234375,
           1.40527344,  0.91113281, -0.06002808,  0.40258789, -0.46264648,
           0.09307861,  1.09667969,  0.67773438, -0.19079590, -0.47534180,
          -1.79199219,  0.07299805, -0.97021484, -0.15173340,  0.64794922,
           0.40209961, -0.45727539,  0.91455078, -0.80712891, -0.03463745,
          -1.31542969, -0.60742188,  1.12500000, -0.70458984,  1.07714844,
          -0.69433594, -0.13562012,
        0.66992188, -0.66650391,  0.19091797, -1.75976562, -0.58544922,
          -0.69628906, -0.12390137, -0.64599609, -0.20935059,  1.72070312,
           0.58349609, -0.06488037,  2.06054688, -0.24902344, -1.80078125,
          -0.42187500, -1.14355469,  1.20019531,  0.34863281, -0.68798828,
          -0.43603516, -1.01074219, -0.92236328,  0.57861328,  1.27539062,
          -1.84667969,  0.96630859, -0.72607422,  0.04260254,  1.90917969,
          -0.81884766, -0.67626953,
        1.42382812,  0.92431641,  0.21203613,  0.59375000, -0.15283203,
          -0.41259766,  0.60107422,  2.09960938,  0.88671875, -0.23193359,
           0.74414062, -0.27172852, -0.89843750,  0.88183594, -0.81005859,
           0.87744141, -1.76562500,  0.65332031, -0.06408691,  0.69335938,
          -1.32519531, -0.41430664,  0.61572266, -0.37158203, -0.53076172,
           1.17773438, -0.87158203, -0.50390625,  1.90527344,  0.25878906,
          -0.30688477, -0.58251953,
        -0.30517578,  0.02354431, -1.03808594, -0.45751953,  1.39746094,
          -0.51953125,  0.74755859, -0.54638672, -0.08978271,  0.01110077,
          -0.33740234,  0.30688477,  0.36889648, -2.05273438,  0.89453125,
          -0.42089844, -0.41064453,  0.51660156, -0.27050781,  0.47387695,
          -0.90332031,  0.29711914, -1.24316406, -0.45581055, -0.26147461,
          -1.19824219, -1.53320312, -0.27294922, -1.02343750,  0.24304199,
           0.17028809, -0.21105957,
        -0.12463379,  0.13305664, -0.81347656, -0.76416016, -0.41479492,
          -0.37719727, -0.99609375,  0.71191406, -0.33032227,  0.61230469,
          -0.35278320,  0.29980469,  0.12805176,  0.61669922, -1.23632812,
          -0.32543945,  1.13281250,  0.36035156,  0.36523438, -0.41259766,
           0.52490234,  0.21801758, -0.28637695, -1.16308594,  0.29077148,
           0.70654297, -0.27563477,  0.03442383, -0.06774902, -0.49829102,
           0.59375000, -0.11901855,
        -0.14428711, -0.67382812,  0.07434082,  0.22656250,  0.27514648,
          -0.06713867, -1.07519531,  1.82031250,  0.94384766, -1.87011719,
          -0.43774414,  0.14465332, -2.34960938, -0.25390625,  0.33251953,
          -0.43115234, -0.61035156, -1.54589844,  1.06835938,  1.99804688,
          -0.32177734, -1.06835938, -0.72851562, -1.05761719,  2.21289062,
           1.38183594,  0.97216797, -0.91210938,  0.36108398, -0.52636719,
           0.70996094, -0.03826904,
        1.65332031, -1.01660156,  0.79541016,  1.05078125,  0.34936523,
          -0.58935547,  1.37304688, -0.77246094, -0.07275391, -0.80419922,
          -1.03222656,  1.70019531,  1.09179688,  0.20898438,  0.63525391,
          -0.80371094, -0.13476562, -1.25585938, -0.00192165,  0.13598633,
           0.68945312,  0.43334961,  0.06164551,  1.47949219,  0.73828125,
          -1.53710938,  1.65136719, -0.32055664,  0.47509766, -1.31250000,
           0.71533203,  1.01953125,
        0.29296875,  0.29321289, -0.47070312, -1.82421875,  0.06573486,
           0.50146484, -1.36816406,  0.35034180, -0.95214844, -0.62304688,
           0.59277344, -0.02568054, -1.47656250, -0.72998047,  0.10717773,
          -0.44042969,  0.00814056, -0.39184570, -1.38574219, -0.72656250,
          -1.48925781,  0.00950623, -0.65771484,  0.76074219,  0.34204102,
           0.79248047,  1.59667969, -0.34814453,  0.16967773, -0.31884766,
           1.40234375,  0.65576172 };
    vector<__half> key = {0.18078613, -0.55224609,  0.92382812, -0.73486328,  1.37988281,
           0.86767578,  0.12963867, -0.94042969,  0.81103516,  0.88183594,
          -1.01367188, -0.36328125,  0.51025391,  0.41796875, -0.68896484,
          -0.13464355, -0.31127930,  1.79199219, -0.84765625,  1.64843750,
           0.39746094, -0.52392578,  0.19860840, -0.13513184, -0.27758789,
          -0.77587891,  1.00878906, -0.53173828,  0.71142578,  0.53857422,
           1.85253906,  0.29272461,
        -0.24841309, -0.56152344,  3.02734375, -0.06713867, -0.39404297,
          -0.11248779,  1.95800781,  1.86816406, -0.53564453, -0.13061523,
           0.06112671, -0.29150391,  2.27539062,  0.10699463, -0.00994873,
           0.41455078, -1.56054688, -0.90429688,  2.01757812,  0.24597168,
          -1.88671875,  2.55468750,  1.03710938, -1.87304688, -0.87744141,
          -0.20593262,  1.18164062, -0.17553711, -0.76416016,  0.71337891,
           0.50683594,  0.37377930,
        2.06835938, -1.30664062, -0.22204590, -0.22229004,  0.18920898,
          -0.56201172, -1.39941406,  0.59863281, -0.02879333,  0.85351562,
          -1.35156250, -0.58007812,  1.26562500, -1.73437500,  0.21276855,
          -0.28125000, -0.92089844,  0.31347656,  0.13415527,  0.72998047,
           1.09472656,  0.52050781, -0.39648438,  0.48535156,  0.29199219,
           0.97558594, -0.27807617, -0.55761719,  0.52587891, -0.02453613,
           1.96582031, -0.71289062,
        -1.05273438,  0.37915039, -0.62402344, -0.19775391,  0.50146484,
          -0.29418945,  0.47119141, -0.74121094, -0.40258789,  0.22216797,
           0.94335938, -0.27856445, -0.87011719, -0.85986328, -1.51562500,
          -0.47973633, -0.91015625, -0.32128906,  1.23437500, -1.50585938,
           0.63183594, -1.42773438,  0.18176270,  0.54443359,  0.73925781,
          -0.65234375,  0.43237305,  1.78222656,  0.23205566,  0.13684082,
           1.27050781, -0.40429688,
        0.51171875,  1.15917969, -1.03222656,  1.42480469, -1.42578125,
           0.77441406,  0.06036377, -0.42041016,  1.29980469,  0.88623047,
          -0.81835938,  1.49804688, -1.02246094,  1.43847656,  2.36914062,
           1.01660156,  1.07519531, -1.24804688, -0.76904297, -0.18872070,
          -0.64599609,  1.11816406, -0.00216484, -1.90527344, -0.68750000,
          -0.50976562, -0.86376953,  0.25488281,  0.29882812,  0.12481689,
          -0.02102661, -0.54101562,
        -0.59472656,  0.24768066, -1.89843750,  2.09570312, -0.47460938,
           0.16943359,  0.93994141,  0.31494141,  0.75830078, -0.19274902,
          -1.42871094,  1.32226562,  0.00988007,  1.13378906,  0.71191406,
          -1.23730469,  2.84179688, -0.61718750,  0.03964233,  0.90185547,
           0.21643066,  0.51220703,  1.38867188, -1.24804688, -0.33911133,
           0.11645508, -0.52929688,  0.32250977,  0.04608154, -0.09320068,
          -0.45239258,  0.71484375,
        0.85156250, -1.04492188,  0.88818359, -0.78515625, -0.46752930,
           0.47729492,  1.08300781,  0.75976562,  0.59326172,  1.72656250,
          -0.48486328,  1.13085938,  0.50292969,  0.07751465, -1.25292969,
          -0.75976562,  0.22888184,  1.13964844, -0.68847656,  0.57666016,
          -0.65136719, -1.65234375, -1.92187500, -0.50195312,  1.22265625,
           0.68457031,  0.40844727, -0.23413086, -0.10241699, -0.50146484,
          -0.83105469, -0.06304932,
        0.97021484, -0.14636230,  0.87500000, -0.07800293, -0.19726562,
           0.90625000, -1.60156250, -1.36718750, -1.02441406, -0.69921875,
          -0.64306641, -1.11230469, -1.81347656,  1.34765625,  0.93212891,
          -0.02255249,  0.48999023,  1.38476562, -0.47094727,  1.25390625,
          -0.67773438,  0.43603516,  0.98193359,  1.04199219, -1.04589844,
          -0.09826660,  0.20080566, -1.14062500, -0.95410156,  0.13745117,
          -1.78125000,  0.19628906};
    vector<__half> value = {
        2.54492188, -0.71630859, -0.49340820,  0.12670898,  0.10137939,
          -0.40356445,  0.90234375,  0.81005859, -0.68847656,  0.13720703,
           1.03808594,  0.09252930, -0.37524414, -0.09082031,  2.06445312,
          -1.81640625, -0.27197266,  0.28100586, -1.04003906,  0.77636719,
           0.88134766,  0.04437256, -1.48730469,  1.13378906,  1.32714844,
          -1.26171875,  0.95019531, -0.65576172,  0.90966797, -0.62890625,
          -0.65869141,  2.08203125,
         1.41503906, -0.30908203, -0.20544434,  2.05664062, -0.04904175,
          -0.63623047, -0.53613281, -0.13098145, -0.29443359,  1.22753906,
           1.05468750,  0.35766602,  1.63769531, -0.23107910,  0.78808594,
          -0.08068848, -0.39233398,  1.26757812,  1.04199219, -0.49438477,
          -1.16406250,  1.57421875,  0.71142578,  0.61035156,  1.28515625,
          -0.65332031,  1.11718750, -1.00683594,  1.29101562,  1.60253906,
           0.13317871,  1.07031250,
        -1.11621094, -0.83935547, -3.66796875,  0.81884766,  0.12548828,
          -0.76904297,  0.15515137, -0.87841797, -0.47338867,  0.96923828,
          -1.99804688,  0.10302734,  0.85791016,  0.76220703, -1.25878906,
          -0.81835938,  1.80078125, -0.79101562,  0.19982910,  1.69433594,
          -1.17675781,  0.66650391,  0.87646484, -1.28027344,  1.15722656,
          -1.96972656,  2.07031250, -1.12304688, -0.10455322, -1.02148438,
          -0.33032227, -0.86230469,
         0.24304199,  1.72558594, -1.74902344, -1.81835938,  0.63232422,
           0.70654297,  0.73828125,  0.37866211,  0.89306641, -1.56542969,
          -0.01274109, -1.84960938,  0.49951172, -0.13977051,  0.25439453,
           0.18298340, -0.38330078,  0.89062500, -0.13903809,  1.77441406,
           0.73046875, -0.22180176, -0.33862305, -0.85302734, -0.41040039,
          -0.66894531,  1.64843750,  1.53808594,  1.86425781, -0.17968750,
           1.38085938, -0.30297852,
        0.80908203,  0.55517578,  0.44799805,  1.37792969,  1.79882812,
          -0.45947266,  0.68603516, -2.21484375, -1.23242188,  1.51757812,
           0.93505859, -0.83007812, -1.36132812,  0.41308594,  1.13476562,
           0.93164062,  0.08758545,  1.05078125, -2.51757812, -0.31469727,
           1.41796875,  0.61572266,  0.10974121,  1.73144531, -0.54638672,
          -0.38793945,  0.22460938, -0.60839844,  1.91699219, -0.23901367,
           2.00390625, -1.22656250,
        -0.27539062, -0.42504883, -0.63281250,  1.19140625, -0.33105469,
           2.58398438,  0.38940430,  1.29785156, -0.12072754,  1.26269531,
           1.24609375,  1.77539062,  0.33349609, -0.54687500, -0.78759766,
          -0.93847656, -0.61328125,  1.93261719, -1.17773438, -1.20605469,
           0.34692383, -0.39624023, -1.69335938,  0.95019531, -1.00976562,
          -1.32324219, -0.54052734, -0.17639160, -0.68212891,  0.17028809,
          -0.71289062, -0.23156738,
        -2.55273438,  0.69726562,  0.54736328, -0.60546875,  0.47070312,
           2.17187500,  0.48388672, -0.17553711, -0.23205566,  1.76562500,
          -0.41992188, -1.20703125,  0.92871094, -0.36132812,  0.31860352,
           0.70214844, -0.00162125,  0.43310547, -0.80712891,  0.48486328,
          -0.23547363, -0.60400391, -0.74414062,  0.86181641,  0.20507812,
          -1.08007812,  0.97070312,  0.26611328, -1.12304688,  0.69970703,
           0.19055176, -0.24914551,
        0.81005859, -1.07031250, -0.23181152, -0.11627197,  3.03125000,
           0.60937500,  0.63720703,  0.62207031,  0.82519531, -1.15136719,
           0.42187500, -0.00410843,  0.32104492, -0.47119141, -0.39965820,
           1.33203125,  1.01562500,  1.94140625, -0.68945312, -0.02618408,
          -0.38671875, -0.55175781,  0.23730469,  0.82910156,  0.54052734,
          -0.40429688, -0.26440430, -1.07031250, -0.10070801,  0.33276367,
           0.21459961,  1.01660156};
    const int seq_len = 4;
    const int batch_size = 1;
    const int head_num = 4;
    const int head_num_k = 2;
    const int head_dim = 32;
    vector<int> cu_seqlens_q = {0, seq_len};
    vector<int> cu_seqlens_k = {0, seq_len};
    vector<uint64_t> rng_state(2);
    const float scale = std::sqrt(float(head_dim));
    __half * query_d = nullptr;
    __half * key_d = nullptr;
    __half * value_d = nullptr;
    int * cu_seqlens_q_d = nullptr;
    int * cu_seqlens_k_d = nullptr;
    uint64_t * rng_state_d = nullptr;
    float * softmax_lse_d = nullptr;
    __half * output_d = nullptr;
    cudaMalloc(&query_d, query.size() * sizeof(__half));
    cudaMalloc(&key_d, key.size() * sizeof(__half));
    cudaMalloc(&value_d, value.size() * sizeof(__half));
    cudaMalloc(&cu_seqlens_q_d, cu_seqlens_q.size() * sizeof(int));
    cudaMalloc(&cu_seqlens_k_d, cu_seqlens_k.size() * sizeof(int));
    cudaMalloc(&rng_state_d, rng_state.size() * sizeof(uint64_t));
    cudaMalloc(&softmax_lse_d, batch_size * head_num * seq_len * sizeof(float));
    cudaMalloc(&output_d, query.size() * sizeof(__half));
    cudaMemcpy(query_d, query.data(),query.size() * sizeof(__half), cudaMemcpyHostToDevice);
    cudaMemcpy(key_d, key.data(),key.size() * sizeof(__half), cudaMemcpyHostToDevice);
    cudaMemcpy(value_d, value.data(),value.size() * sizeof(__half), cudaMemcpyHostToDevice);
    cudaMemcpy(cu_seqlens_q_d, cu_seqlens_q.data(),cu_seqlens_q.size() * sizeof(int), cudaMemcpyHostToDevice);
    cudaMemcpy(cu_seqlens_k_d, cu_seqlens_k.data(),cu_seqlens_k.size() * sizeof(int), cudaMemcpyHostToDevice);
    cudaStream_t stream;
    cudaStreamCreate(&stream);
    cudaDeviceSynchronize();
    for (int i = 0; i < 1; ++i) {
      flash_attn_varlen_fwd(
        query_d,  // total_q x num_heads x head_size, total_q := \sum_{i=0}^{b} s_i
        key_d,  // total_k x num_heads_k x head_size, total_k := \sum_{i=0}^{b} s_i
        value_d,  // total_k x num_heads_k x head_size, total_k := \sum_{i=0}^{b} s_i
        cu_seqlens_q_d,  // b+1
        cu_seqlens_k_d,  // b+1
        rng_state_d,
        output_d, // total_q x num_heads x head_size, total_k := \sum_{i=0}^{b} s_i
        nullptr,
        softmax_lse_d,
        batch_size,
        seq_len,
        seq_len,
        128,
        128,
        head_num,
        head_num_k,
        head_dim,
        head_dim,
        0,
        scale,
        true,
        false,
        false,
        stream,
        0,
        0);
    }
    cudaDeviceSynchronize();
    print_vector<<<1,1>>>(output_d, query.size());
   //  print_vector<<<1,1>>>(cu_seqlens_q_d, cu_seqlens_q.size());
   //  print_vector<<<1,1>>>(cu_seqlens_k_d, cu_seqlens_k.size());
    cudaDeviceSynchronize();
    return 0;
}